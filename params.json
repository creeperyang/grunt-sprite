{"name":"Grunt-sprite","tagline":"A grunt plugin to generate css sprite.","body":"# grunt-image-sprite\r\n\r\n> convert images to a css sprite image\r\n\r\n## Getting Started\r\nThis plugin requires Grunt.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-image-sprite --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-image-sprite');\r\n```\r\n\r\n## More about instalation\r\n\r\nThe plugin depend on `imagemagick`. ImageMagick is a software suite to create, edit, compose, or convert bitmap images. You can goto <http://www.imagemagick.org/> for details.\r\n\r\nIf your os is `Ubuntu|Mac os`, when you run `npm install grunt-image-sprite`, script will automatically install `imagemagick`.\r\n\r\nIf you use windows and other os, or the instalation failed, please install `imagemagick` manually. Goto <http://www.imagemagick.org/script/binary-releases.php> for details.\r\n\r\n## The \"image_sprite\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `image_sprite` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  image_sprite: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.vertical\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nA boolean value that is used to specify orientation of icons.\r\n\r\n#### options.margin\r\nType: `Number`\r\nDefault value: `0`\r\n\r\nA number value that is used to specify margin(icon's gap).\r\n\r\n#### options.prefix\r\nType: `String`\r\nDefault value: `'icon'`\r\n\r\nA string value that is used as class name's prefix when generate css file.\r\n\r\n```css\r\n.icon-angle-down-suffix {\r\n// 'icon' is the prefix, '-' is the connector, 'andle-down' is automatically generated from file's name, 'suffix' is the suffix.\r\n}\r\n```\r\n\r\n#### options.connector\r\nType: `String`\r\nDefault value: `'-'`\r\n\r\nA string value that is used as connector when generate css file.\r\n\r\n#### options.suffix\r\nType: `String`\r\nDefault value: `''`\r\n\r\nA string value that is used as class name's suffix when generate css file.\r\n\r\n#### options.cssPath\r\nType: `String`\r\nDefault value: `''`\r\n\r\nA string value that is used to specify css file's path\r\n\r\n#### options.cssFile\r\nType: `String|Function`\r\nDefault value: `''`\r\n\r\nA string/function value that is used to specify css file's name. If it is set to function, the generated sprite image's path will be passed as argument.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nRun command `grunt image_sprite`, you will get the `tmp/sprite.png` and `tmp/sprite.css`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  image_sprite: {\r\n    options: {\r\n      'cssPath': 'tmp',\r\n      'vertical': true,\r\n      'margin': 2\r\n    },\r\n    sprite: {\r\n      options: {\r\n        'vertical': true,\r\n        'cssFile': 'sprite.css' // 'sprite.less' is also allowed\r\n      },\r\n      files: {\r\n        'tmp/sprite.png': ['test/fixtures/*.png']\r\n      }\r\n    }\r\n  },\r\n})\r\n```\r\n\r\n**Use sprite inside your project, you need some more work:**\r\n\r\n1. add css/less code bellow:\r\n    ```css\r\n    @import url('tmp/sprite.css');\r\n\r\n    .icon {\r\n      display: inline-block; // block;\r\n      background-image: url('tmp/sprite.png');\r\n      background-repeat: no-repeat;\r\n    }\r\n    ```\r\n2. make sure css/less file path and sprite image path are right. Include css file in your html.\r\n3. Finally you can write something like this:\r\n    \r\n    ```html\r\n    <i class='icon icon-angle-down'></i>\r\n    ```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n2015-04-17&nbsp;&nbsp;&nbsp;&nbsp;`v0.0.1`&nbsp;&nbsp;&nbsp;&nbsp;初始版本\r\n\r\n## License\r\nCopyright (c) 2015 creeperyang. Licensed under the MIT license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}